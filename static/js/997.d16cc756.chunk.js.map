{"version":3,"file":"static/js/997.d16cc756.chunk.js","mappings":"0LAAA,MAgBA,EAhBaA,IAAuC,IAAtC,KAAEC,EAAI,WAAEC,EAAU,WAAEC,GAAYH,EAC7C,OACCI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACEL,EAAKM,MAAM,IAAEN,EAAKO,gBAGpBC,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMP,EAAWF,EAAKU,IAAIL,SACzCL,EAAKW,UAAUC,cAEjBJ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMR,EAAWD,EAAKU,IAAIL,SAAC,aAC1C,ECKL,EAfiBN,IAAuC,IAAtC,KAAEC,EAAI,WAAEC,EAAU,WAAEC,GAAYH,EACjD,OACCS,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAC,SACEL,EAAKa,KAAKC,IACVN,EAAAA,EAAAA,KAACO,EAAI,CACJf,KAAMc,EAENb,WAAYA,EACZC,WAAYA,GAFPY,EAAGJ,OAKR,E,sBCXL,MAAMM,UAAuBC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACtCC,MAAQ,CACPd,MAAO,GACPC,YAAa,IACb,KAEDc,aAAetB,IAAkC,IAA/BuB,QAAQ,MAAEC,EAAK,KAAEC,IAAQzB,EAC1C0B,KAAKC,SAAS,CACb,CAACF,GAAOD,GACP,EACF,KACDI,aAAgBC,IACfA,EAAEC,iBACFJ,KAAKK,MAAMC,WAAWN,KAAKL,OAC3BK,KAAKC,SAAS,CACbpB,MAAO,GACPC,YAAa,IACZ,CACF,CACDyB,MAAAA,GACC,OACC7B,EAAAA,EAAAA,MAAA,QAAM8B,SAAUR,KAAKE,aAAatB,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAK+B,UAAU,OAAM7B,SAAA,EACpBG,EAAAA,EAAAA,KAAA,SAAO2B,QAAQ,qBAAqBD,UAAU,aAAY7B,SAAC,WAG3DG,EAAAA,EAAAA,KAAA,SACCgB,KAAK,QACLY,KAAK,OACLF,UAAU,eACVxB,GAAG,qBACHa,MAAOE,KAAKL,MAAMd,MAClB+B,SAAUZ,KAAKJ,mBAGjBlB,EAAAA,EAAAA,MAAA,OAAK+B,UAAU,OAAM7B,SAAA,EACpBG,EAAAA,EAAAA,KAAA,SAAO2B,QAAQ,wBAAwBD,UAAU,aAAY7B,SAAC,iBAG9DG,EAAAA,EAAAA,KAAA,SACCgB,KAAK,cACLY,KAAK,OACLF,UAAU,eACVxB,GAAG,wBACHa,MAAOE,KAAKL,MAAMb,YAClB8B,SAAUZ,KAAKJ,mBAGjBb,EAAAA,EAAAA,KAAA,UAAQ4B,KAAK,SAASF,UAAU,kBAAiB7B,SAAC,aAKrD,EAGD,UC7BA,EAxBiBiC,KAChB,MAAM,KAAEtC,IAASuC,EAAAA,EAAAA,KAAanB,GAAUA,EAAMpB,OACxCwC,GAAWC,EAAAA,EAAAA,MAcjB,OACCtC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCG,EAAAA,EAAAA,KAACQ,EAAc,CAACe,WANEW,IACnBF,GAASG,EAAAA,EAAAA,IAAcD,GAAM,IAM3B1C,IAAQQ,EAAAA,EAAAA,KAACoC,EAAQ,CAAC5C,KAAMA,EAAMC,WAfbS,IACnB8B,GAASK,EAAAA,EAAAA,IAAiBnC,GAAI,EAc0BR,WAXrCQ,IACnB8B,GAASM,EAAAA,EAAAA,IAAiBpC,GAAI,MAW3B,C","sources":["components/Todo/index.jsx","components/TodoList/index.jsx","components/Forms/FormCreateTodo.jsx","pages/TodoPage.jsx"],"sourcesContent":["const Todo = ({ todo, deleteTodo, updateTodo }) => {\n\treturn (\n\t\t<>\n\t\t\t<li>\n\t\t\t\t{todo.title} {todo.description}\n\t\t\t</li>\n\n\t\t\t<button onClick={() => updateTodo(todo.id)}>\n\t\t\t\t{todo.completed.toString()}\n\t\t\t</button>\n\t\t\t<br />\n\t\t\t<button onClick={() => deleteTodo(todo.id)}>Delete</button>\n\t\t</>\n\t)\n}\n\nexport default Todo\n","import Todo from '../Todo'\n\nconst TodoList = ({ todo, deleteTodo, updateTodo }) => {\n\treturn (\n\t\t<>\n\t\t\t{todo.map((el) => (\n\t\t\t\t<Todo\n\t\t\t\t\ttodo={el}\n\t\t\t\t\tkey={el.id}\n\t\t\t\t\tdeleteTodo={deleteTodo}\n\t\t\t\t\tupdateTodo={updateTodo}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport default TodoList\n","import { Component } from 'react'\n\nclass FormCreateTodo extends Component {\n\tstate = {\n\t\ttitle: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = ({ target: { value, name } }) => {\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t})\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tthis.props.createTodo(this.state)\n\t\tthis.setState({\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t<label htmlFor='exampleInputEmail1' className='form-label'>\n\t\t\t\t\t\tTitle\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='exampleInputEmail1'\n\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='mb-3'>\n\t\t\t\t\t<label htmlFor='exampleInputPassword1' className='form-label'>\n\t\t\t\t\t\tDescription\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='description'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='exampleInputPassword1'\n\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button type='submit' className='btn btn-primary'>\n\t\t\t\t\tCreate\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default FormCreateTodo\n","import { useDispatch, useSelector } from 'react-redux'\nimport TodoList from '../components/TodoList'\nimport { addTodoAction, removeTodoAction, updateTodoAction } from '../store/todoWithSlice/sliceTodo'\nimport FormCreateTodo from '../components/Forms/FormCreateTodo'\n\nconst TodoPage = () => {\n\tconst { todo } = useSelector((state) => state.todo)\n\tconst dispatch = useDispatch()\n\n\tconst deleteTodo = (id) => {\n\t\tdispatch(removeTodoAction(id))\n\t}\n\n\tconst updateTodo = (id) => {\n\t\tdispatch(updateTodoAction(id))\n\t}\n\n\tconst createTodo = (data) => {\n\t\tdispatch(addTodoAction(data))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FormCreateTodo createTodo={createTodo} />\n\t\t\t{todo && <TodoList todo={todo} deleteTodo={deleteTodo} updateTodo={updateTodo} />}\n\t\t</>\n\t)\n}\n\nexport default TodoPage\n"],"names":["_ref","todo","deleteTodo","updateTodo","_jsxs","_Fragment","children","title","description","_jsx","onClick","id","completed","toString","map","el","Todo","FormCreateTodo","Component","constructor","arguments","state","handleChange","target","value","name","this","setState","handleSubmit","e","preventDefault","props","createTodo","render","onSubmit","className","htmlFor","type","onChange","TodoPage","useSelector","dispatch","useDispatch","data","addTodoAction","TodoList","removeTodoAction","updateTodoAction"],"sourceRoot":""}
{"version":3,"file":"static/js/997.4c626819.chunk.js","mappings":"0LAAA,MAWA,EAXaA,IAAuC,IAAtC,KAAEC,EAAI,WAAEC,EAAU,WAAEC,GAAYH,EAC7C,OACCI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACEL,EAAKM,MAAM,IAAEN,EAAKO,gBAEpBC,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMR,EAAWD,EAAKU,IAAIL,SAAC,aAC1C,ECUL,EAfiBN,IAAuC,IAAtC,KAAEC,EAAI,WAAEC,EAAU,WAAEC,GAAYH,EACjD,OACCS,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAC,SACEL,EAAKW,KAAKC,IACVJ,EAAAA,EAAAA,KAACK,EAAI,CACJb,KAAMY,EAENX,WAAYA,EACZC,WAAYA,GAFPU,EAAGF,OAKR,E,sBCXL,MAAMI,UAAuBC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACtCC,MAAQ,CACPZ,MAAO,GACPC,YAAa,IACb,KAEDY,aAAepB,IAAkC,IAA/BqB,QAAQ,MAAEC,EAAK,KAAEC,IAAQvB,EAC1CwB,KAAKC,SAAS,CACb,CAACF,GAAOD,GACP,EACF,KACDI,aAAgBC,IACfA,EAAEC,iBACFJ,KAAKK,MAAMC,WAAWN,KAAKL,OAC3BK,KAAKC,SAAS,CACblB,MAAO,GACPC,YAAa,IACZ,CACF,CACDuB,MAAAA,GACC,OACI3B,EAAAA,EAAAA,MAAA,QAAM4B,SAAUR,KAAKE,aAAapB,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,OAAM3B,SAAA,EACnBG,EAAAA,EAAAA,KAAA,SAAOyB,QAAQ,qBAAqBD,UAAU,aAAY3B,SAAC,UAG3DG,EAAAA,EAAAA,KAAA,SACEc,KAAK,QACLY,KAAK,OACLF,UAAU,eACVtB,GAAG,qBACHW,MAAOE,KAAKL,MAAMZ,MAClB6B,SAAUZ,KAAKJ,mBAGnBhB,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,OAAM3B,SAAA,EACnBG,EAAAA,EAAAA,KAAA,SAAOyB,QAAQ,wBAAwBD,UAAU,aAAY3B,SAAC,YAG9DG,EAAAA,EAAAA,KAAA,SACEc,KAAK,cACLY,KAAK,OACLF,UAAU,eACVtB,GAAG,wBACHW,MAAOE,KAAKL,MAAMX,YAClB4B,SAAUZ,KAAKJ,mBAGnBX,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAASF,UAAU,kBAAiB3B,SAAC,kBAKzD,EAID,UC9BA,EAxBiB+B,KAChB,MAAM,KAAEpC,IAASqC,EAAAA,EAAAA,KAAanB,GAAUA,EAAMlB,OACxCsC,GAAWC,EAAAA,EAAAA,MAcjB,OACCpC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCG,EAAAA,EAAAA,KAACM,EAAc,CAACe,WANEW,IACnBF,GAASG,EAAAA,EAAAA,IAAcD,GAAM,IAM3BxC,IAAQQ,EAAAA,EAAAA,KAACkC,EAAQ,CAAC1C,KAAMA,EAAMC,WAfbS,IACnB4B,GAASK,EAAAA,EAAAA,IAAiBjC,GAAI,EAc0BR,WAXrCQ,IACnB4B,GAASM,EAAAA,EAAAA,IAAiBlC,GAAI,MAW3B,C","sources":["components/Todo/index.jsx","components/TodoList/index.jsx","components/Forms/FormCreateTodo.jsx","pages/TodoPage.jsx"],"sourcesContent":["const Todo = ({ todo, deleteTodo, updateTodo }) => {\n\treturn (\n\t\t<>\n\t\t\t<li>\n\t\t\t\t{todo.title} {todo.description}\n\t\t\t</li>\n\t\t\t<button onClick={() => deleteTodo(todo.id)}>Delete</button>\n\t\t</>\n\t)\n}\n\nexport default Todo\n","import Todo from '../Todo'\n\nconst TodoList = ({ todo, deleteTodo, updateTodo }) => {\n\treturn (\n\t\t<>\n\t\t\t{todo.map((el) => (\n\t\t\t\t<Todo\n\t\t\t\t\ttodo={el}\n\t\t\t\t\tkey={el.id}\n\t\t\t\t\tdeleteTodo={deleteTodo}\n\t\t\t\t\tupdateTodo={updateTodo}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport default TodoList\n","import { Component } from 'react'\n\nclass FormCreateTodo extends Component {\n\tstate = {\n\t\ttitle: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = ({ target: { value, name } }) => {\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t})\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tthis.props.createTodo(this.state)\n\t\tthis.setState({\n\t\t\ttitle: '',\n\t\t\tdescription: '',\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Name\n          </label>\n          <input\n            name=\"title\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n            Number\n          </label>\n          <input\n            name=\"description\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Add Contact\n        </button>\n      </form>\n    );\n\t}\n}\n\n\nexport default FormCreateTodo\n","import { useDispatch, useSelector } from 'react-redux'\nimport TodoList from '../components/TodoList'\nimport { addTodoAction, removeTodoAction, updateTodoAction } from '../store/todoWithSlice/sliceTodo'\nimport FormCreateTodo from '../components/Forms/FormCreateTodo'\n\nconst TodoPage = () => {\n\tconst { todo } = useSelector((state) => state.todo)\n\tconst dispatch = useDispatch()\n\n\tconst deleteTodo = (id) => {\n\t\tdispatch(removeTodoAction(id))\n\t}\n\n\tconst updateTodo = (id) => {\n\t\tdispatch(updateTodoAction(id))\n\t}\n\n\tconst createTodo = (data) => {\n\t\tdispatch(addTodoAction(data))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FormCreateTodo createTodo={createTodo} />\n\t\t\t{todo && <TodoList todo={todo} deleteTodo={deleteTodo} updateTodo={updateTodo} />}\n\t\t</>\n\t)\n}\n\nexport default TodoPage\n"],"names":["_ref","todo","deleteTodo","updateTodo","_jsxs","_Fragment","children","title","description","_jsx","onClick","id","map","el","Todo","FormCreateTodo","Component","constructor","arguments","state","handleChange","target","value","name","this","setState","handleSubmit","e","preventDefault","props","createTodo","render","onSubmit","className","htmlFor","type","onChange","TodoPage","useSelector","dispatch","useDispatch","data","addTodoAction","TodoList","removeTodoAction","updateTodoAction"],"sourceRoot":""}